#!/usr/bin/env bash

lock_with_xsecurelock() {
    XSECURELOCK_BLANK_TIMEOUT=30 \
    XSECURELOCK_BLANK_DPMS_STATE=suspend \
    XSECURELOCK_PASSWORD_PROMPT=time_hex \
    XSECURELOCK_SAVER_RESET_ON_AUTH_CLOSE=1 \
    XSECURELOCK_DATETIME_FORMAT="%Y-%m-%d %H:%M" \
    XSECURELOCK_SHOW_HOSTNAME=0 \
    XSECURELOCK_SHOW_USERNAME=0 \
    XSECURELOCK_SHOW_DATETIME=1 \
    XSECURELOCK_AUTH_TIMEOUT=10 \
    XSECURELOCK_AUTH_FOREGROUND_COLOR="rgb:eb/db/b2" \
    XSECURELOCK_AUTH_WARNING_COLOR="rgb:fb/49/34" \
    exec xsecurelock
}

notify() {
    local timeout
    printf "%s\n" "autolock: start notify"
    IFS=$' ' read -d "" -r timeout <<< "$(get_xset_timeout)"
    timeout=$((timeout * 1))
    printf "%s\n" "autolock: start countdown of $timeout seconds"
    while [[ "$timeout" -gt 0 ]]; do
        notify-send \
            -t 1100 \
            -u critical \
            -h string:private-synchronous:autolock \
            "Autolock" \
            "Locking screen in $timeout seconds."
        ((timeout--))
        sleep 1
    done
    printf "%s\n" "autolock: end notify"
}

get_xset_timeout() {
    xset q |
        gawk '/^Screen Saver:/{target = 1}
        /^\s+timeout:\s+[0-9]+\s+cycle:\s+[0-9]+/ && target {print $4; exit}'
}

case "$1" in
    lock) lock_with_xsecurelock;;
    notify) notify;;
esac

[[ -n "$1" ]] && exit 0

exec xss-lock \
    --notifier="$0 notify" \
    --ignore-sleep \
    "$0" lock

# xautolock \
#     -resetsaver \
#     -detectsleep \
#     -time 1 \
#     -notify 20 \
#     -notifier "$0 notify" \
#     -locker "$0 lock"
