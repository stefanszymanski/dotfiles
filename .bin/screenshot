#!/usr/bin/env bash

dir="${SCREENSHOT_DIR:-~/screenshots}"
cmd="$(basename "$0")"

_usage() {
    printf "%s\n" "Usage: $cmd [menu|screen|selection|window]"
    exit 1
}

check_directory() {
    if [ -e "$1" ] && [ ! -d "$1" ]; then
        printf "%s\n" "$1 must be a directory"
        exit 1
    fi
    if [ ! -d "$1" ]; then
        mkdir "$1"
    fi
}

show_menu() {
    options=(
        '1: Selection'
        '2: Screen'
        '3: Window'
    )
    choice=$(printf '%s\n' "${options[@]}" \
        | rofi -i -lines 3 -dmenu -p 'screenshot' \
        | cut -d ':' -f 1)
    [[ -z "$choice" ]] && exit 1
    case "$choice" in
        1) $cmd selection;;
        2) $cmd screen;;
        3) $cmd window;;
    esac
}

ask_for_filename() {
    local filename custom
    filename="$1"
    custom="$(rofi -dmenu -i -lines 0 -p "screenshot file name" -width -80)"
    [ "$custom" ] && filename="$custom"
    printf "%s\n" "$filename"
}

[ "$#" -ne 1 ] && _usage

check_directory "$dir"

case "$1" in
    menu)
        show_menu
        exit 0
        ;;
    screen)
        sleep 0.1
        scrot_args=()
        filename="screenshot-screen_%Y-%m-%d_%H-%M-%S_\$wx\$h.png"
        ;;
    selection)
        scrot_args=("--select")
        filename="screenshot-selection_%Y-%m-%d_%H-%M-%S_\$wx\$h.png"
        ;;
    window)
        sleep 0.1
        scrot_args=("--focused")
        filename="screenshot-focused_%Y-%m-%d_%H-%M-%S_\$wx\$h.png"
        ;;
    *) 
        _usage
        ;;
esac

filename="$(ask_for_filename "$filename")"

cmd=(scrot ${scrot_args[*]} "$filename" --exec "mv \$f $dir && echo \$n")
file="$("${cmd[@]}")"

[ -z "$file" ] && exit 2

notify-send "Screenshot saved" "as ${dir}/${file}"
