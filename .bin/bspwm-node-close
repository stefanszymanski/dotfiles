#!/usr/bin/env bash

# Close or kill a window, but ask for confirmation first.

# TODO move color definition to a shared file or make it an environment variable
BORDER_COLOR="cc241d"

if [[ ! "$1" =~ ^(close|kill)$ ]]; then
    echo "Usage: bspwm-node-close {kill,close} [wid]"
    exit 1
fi

winid="${2-$(pfw)}"

chwb -c "0x$BORDER_COLOR" "$winid"

IFS=$' ' read -d -r x y <<< "$(wattr xy "$winid")"

# TODO:
# x and y are relative to the full display, not to the current monitor.
# Currently -m 0 means relative to the first detected monitor, but that may be unreliable.
# I see two solutions to do better than this:
# 1. set -m to the name of the most left monitor
# 2. set -m -4 (-4 means monitor with focused window) and make x and y relative to the current monitor
options=('y' 'n')
choice="$(printf '%s\n' "${options[@]}" | \
    rofi -dmenu -i \
    -lines 0 -auto-select \
    -m 0 -location 1 \
    -xoffset "$x" -yoffset "$y" \
    -theme-str "#window {border-color: #$BORDER_COLOR;}" \
    -p "$1 window?" -width -15)"

if [[ ! "$choice" =~ ^[yY1]$ ]]; then
    bspc node --focus "$winid"
    exit 1
fi

bspc node "--${1}"
