# # Prefixes
# super + w             -> window manager
# super + c             -> clients (nodes)
# super + d             -> desktops
# super + m             -> monitors
# super + x             -> dunst notifications
#
# super + ctrl          -> move nodes
# super + alt           -> resize nodes

#########
# bspwm #
#########

# bspwm general
###############

# reload bspwm
super + w ; r
    pkill -USR1 -x sxhkd

# restart bspwm
super + w ; shift + r
    bspc wm --restart

# toggle panel
super + w ; p
    panel-toggle


# bspwm nodes
#############

# focus node
super + {h,j,k,l}
    bspc node --focus {west,south,north,east}

# focus last node
super + space
    bspc node --focus last

# close/kill node
super + shift + {q,x}
    bspwm-node-close {close,kill}

# set node state
super + c ; s ; {t,s,f}
    bspc node --state {tiled,floating,fullscreen}

# set node flags
super + c ; f ; {m,l,s,p}
    bspc node --flag {marked,locked,sticky,private}

# reset node flags
super + c ; f ; shift + {m,l,s,p}
    flag={marked,locked,sticky,private}; \
    for node in $(bspc query --nodes --node ".$flag"); do \
        bspc node "$node" --flag "${flag}=off"; \
    done

# move node on current desktop
super + ctrl + {h,j,k,l}
    bspwm-node-move {west,south,north,east}

# move node to desktop by number
super + ctrl + {1-9,0}
    bspc node --to-desktop 'focused:^{1-9,10}'

# move node to next/previous monitor
super + ctrl + {n,p}
    bspc node --to-monitor {next,prev} --follow

# move node to a new desktop
# TODO not only move the focused but prefer all marked
super + c ; d
    bspwm-node-move-to-new-desktop

# preselect the direction
super + c ; {h,j,k,l}
    bspc node --presel-dir {west,south,north,east}

# cancel the preselection for the focused node
super + Escape
    bspc node --presel-dir cancel

# resize node
super + alt + {h,j,k,l}
    bspwm-node-resize {west,south,north,east} 50

# raise/lower node
super + {plus,minus,equal}
    bspc node --layer {above,below,normal}

# move/resize node with mouse
super + !button{1,3}
    {wmv, wrs} -a %i %i $(pfw)

# create receptacle
super + r ; {h,j,k,l}
    bspc node --presel-dir {west,south,north,east} --insert-receptacle 

# move node to oldest receptacle
super + r ; m
    bspc node focused --to-node "$(bspc query --nodes --node 'any.leaf.!window')" --follow

# remove receptacles on current desktop
super + r ; q
    for node in "$(bspc query --nodes --node '.leaf.!window.local')"; do bspc node "$node" --kill; done

# tabbed
#super + t ; {a,d}
#    bspwm-tabbed {create,detach}


# bspwm desktops
################

# focus desktop by number
super + {1-9,0}
    bspc desktop --focus 'focused:^{1-9,10}'

# focus last/next/previous desktop
super + shift + {space,n,p}
    bspc desktop --focus {last,next.local,prev.local}

# bubble desktop left/right
super + shift + {h,l}
    bspc desktop --bubble {prev,next}

# add/rename/remove/purge desktops
super + d ; {c,r,q,x}
    bspwm-desktop-{add,rename,remove,purge}

# toggle layout
super + d ; s
    bspc desktop --layout nexTrue


# bspwm monitors
################

# focus next/previous monitor
super + {n,p}
    bspc monitor --focus {next,prev}


################
# applications #
################

super + Return
    st

super + ctrl + Return
    st -e tmux


##############
# rofi menus #
##############

super + period
    rofi -show drun

super + minus
    rofi -show window

super + comma
    sessionmenu


########
# misc #
########

# volume
########

{_,shift} + XF86Audio{Raise,Lower}Volume
    pamixer {_,--default-source} --{increase,decrease} 5

{_,shift} + XF86AudioMute
    pamixer {_,--default-source} --toggle-mute

# dunst
#######

# close notification(s)
hyper + n ; {q,x}
    dunstctl {close,close-all}

# open context menu for displayed notifications
hyper + n ; c
    dunstctl context

# redisplay most recently closed notification
hyper + n ; h
    dunstctl history-pop


# other
#######

# lock screen
super + a
    xautolock -locknow

# copy between clipboard and primary buffer
hyper + c ; {c,p}
    {p2cb,cb2p} notify

# sync mail
hyper + m
    PINENTRY_USER_DATA=gtk syncmail -n all

XF86Mail
    PINENTRY_USER_DATA=gtk syncmail -n all

# timer
hyper + t
    timer -g -n "-u critical"

# screenshots
hyper + s ; {a,s,w}
    screenshot {screen,selection,window}

# redshift toggle
hyper + r
    pkill -USR1 redshift
