# Heavily copied from https://github.com/alfunx/.dotfiles/blob/master/.gitconfig

[user]
	name = Stefan Szymanski
	email = stefan.szymanski@posteo.de
	signingkey = 0xD202F413FC8BA7A8

[includeIf "gitdir:~/work/"]
    path = ~/.config/git/config-work

[core]
    editor = nvim
    whitespace = fix,trailing-space,cr-at-eol
    pager = diff-so-fancy | less --tabs=4 -RFX
    excludesfile = ~/.config/git/ignore
	autocrlf = input

[gpg]
	program = gpg2

[color]
	advice = true
	branch = true
	diff = true
	grep = true
	interactive = true
	pager = true
	push = true
	showBranch = true
	status = true
	transport = true
	ui = true

[color "diff"]
	context = 15
	meta = 4 bold
	frag = 3 bold
	commit = 3 bold
	old = 9
	new = 10
	oldMoved = 8
	newMoved = 14
	oldMovedAlternative = 8
	newMovedAlternative = 14
	whitespace = 1 reverse

[color "diff-highlight"]
	oldHighlight = reverse
	oldReset = noreverse

[color "decorate"]
	branch = 2 bold
	remoteBranch = 9 bold
	tag = 3 bold
	stash = 5 bold
	HEAD = 6 bold

[color "interactive"]
	prompt = 4 bold
	header = 15 bold
	help = 15
	error = 1

[color "push"]
	error = 1 bold

[color "transport"]
	rejected = 1 bold

[color "status"]
	header = 15 bold
	added = 14 bold
	changed = 11 bold
	untracked = 9 bold
	branch = 15 bold
	nobranch = 9 bold reverse
	localBranch = 2 bold
	remoteBranch = 9 bold
	unmerged = 1 bold reverse

[commit]
	gpgSign = true
	status = true

[diff]
	algorithm = histogram
	tool = vimdiff
	colorMoved = default
	renames = copy
	mnemonicPrefix = true
	wsErrorHighlight = all

[diff "bin"]
	textconv = hexdump -v -C

[difftool]
	prompt = false

[difftool "vimdiff"]
    cmd = nvim -d \"$LOCAL\" \"$REMOTE\"

[merge]
	ff = false
	conflictStyle = merge
	tool = vimdiff

[mergetool]
	prompt = false
	keepBackup = false
	writeToTemp = true

[mergetool "vimdiff"]
	cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
	trustExitCode = true

[rebase]
	missingCommitsCheck = warn
	abbreviateCommands = false
	autoSquash = true
	stat = true

[fetch]
	prune = false

[pull]
	rebase = interactive

[push]
	default = simple
	gpgSign = if-asked
	followTags = true

[submodule]
	fetchJobs = 0

[grep]
	lineNumber = true
	patternType = perl


[branch]
	autoSetupMerge = true
	autoSetupRebase = always

[status]
	short = true
	branch = true
	showStash = true
	submoduleSummary = true

[log]
	abbrevCommit = true
	decorate = short
	date = format:%a, %Y-%m-%d %R %z
	graphColors = 1,2,3,4,5,6,8,166,9,10,11,12,13,14,15,208
	showRoot = true
	mailmap = true

[rerere]
	enabled = true

[column]
	ui = auto,column

[web]
	browser = firefox

[pretty]
	lo = tformat:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	lt =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%aD%C(reset) %C(italic cyan)(%ad)%C(reset)%C(auto)%d%C(reset)%n %C(white)%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n
	lf =  format:%C(auto)%h%C(reset)%C(auto)%d%C(reset)%n%C(white)SHA-1:%C(reset)    %C(italic)%H%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%aD%C(reset) %C(italic cyan)(%ad)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)%n          %C(italic blue)%cD%C(reset) %C(italic cyan)(%cd)%C(reset)%w(0,4,4)%n%+C(bold)%s%C(reset)%n%+b%n
	rlo = tformat:%C(auto)%h%C(reset) %C(bold yellow)(%C(red)%gd%C(bold yellow))%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
	rlt =  format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%aD%C(reset) %C(italic cyan)(%ad)%C(reset)%C(auto)%d%C(reset)%n %C(white)%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n %C(white)%C(reset) %C(bold yellow)(%C(red)%gd%C(bold yellow))%C(reset) %gs %C(241)- %gN <%gE>%C(reset)%n
	rlf =  format:%C(auto)%h%C(reset)%C(auto)%d%C(reset)%n%C(white)SHA-1:%C(reset)    %C(italic)%H%C(reset)%n%C(white)Author:%C(reset)   %aN %C(241)<%aE>%C(reset)%n          %C(italic blue)%aD%C(reset) %C(italic cyan)(%ad)%C(reset)%n%C(white)Commit:%C(reset)   %cN %C(241)<%cE>%C(reset)%n          %C(italic blue)%cD%C(reset) %C(italic cyan)(%cd)%C(reset)%n%C(white)Reflog:%C(reset)   %gN %C(241)<%gE>%C(reset)%n          %C(italic)%gs%C(reset)%w(0,4,4)%n%+C(bold)%s%C(reset)%n%+b%n

[alias]
	# log, current branch
	l = log --pretty=lt --graph --color --date=default
	lo = log --pretty=lo --graph --color --date=default
	lf = log --pretty=lf --graph --color --date=default
	lff = log --pretty=fuller --graph --color --date=default --stat --summary
	lp = log --pretty=lt --graph --color --date=default --patch -c -M -C
	ld = log --pretty=lt --graph --color --date=default --stat --summary

	# log, all branches+tags on all remotes
	la = log --pretty=lt --graph --color --date=default --all
	lao = log --pretty=lo --graph --color --date=default --all
	laf = log --pretty=lf --graph --color --date=default --all
	laff = log --pretty=fuller --graph --color --date=default --stat --summary --all
	lap = log --pretty=lt --graph --color --date=default --patch -c -M -C --all
	lad = log --pretty=lt --graph --color --date=default --stat --summary --all

	# log, simplified by decoration
	#    added: --all --simplify-by-decoration
	ls = log --pretty=lt --graph --color --date=default --all --simplify-by-decoration
	lso = log --pretty=lo --graph --color --date=default --all --simplify-by-decoration
	lsf = log --pretty=lf --graph --color --date=default --all --simplify-by-decoration
	lsff = log --pretty=fuller --graph --color --date=default --stat --summary --all --simplify-by-decoration
	lsp = log --pretty=lt --graph --color --date=default --patch -c -M -C --all --simplify-by-decoration
	lsd = log --pretty=lt --graph --color --date=default --stat --summary --all --simplify-by-decoration

	sh = show --format=lf --stat --summary --patch
	watch = "!f() { watch -ctn 2 git \"${@:-l}\"; }; f"
	rl = reflog --pretty=rlt --color --date=default
	rlo = reflog --pretty=rlo --color --date=default
	rlf = reflog --pretty=rlf --color --date=default
	sl = stash list --pretty=rlt --color --date=default
	slo = stash list --pretty=rlo --color --date=default
	slf = stash list --pretty=rlf --color --date=default

	d = diff -c
	ds = diff --staged -c
	dc = diff --cached -c
	dl = diff --cached -c HEAD~
	du = diff --cached -c @{u}
	dr = "!f() { git diff -c \"${1:-HEAD}\"~..\"${1:-HEAD}\"; }; f"
	grep = grep -Ii

	s = status
	si = status --ignored
	sa = status --ignored --untracked-files

	a = add
	aa = add --all
	au = add --update
	ai = add --interactive
	ap = add --patch
	u = reset HEAD --
	up = reset --patch HEAD --

	c = commit --verbose
	cc = commit --verbose -c
	cf = commit --verbose --fixup
	cs = commit --verbose --squash
	ca = commit --verbose --amend
	can = commit --verbose --amend --no-edit
	car = commit --verbose --amend --all

	co = checkout
	com = checkout master
	cod = checkout develop
	cob = checkout -b
	b = branch
	bv = branch --all -vv
	bc = branch --contains
	bd = branch --delete --force

	cl = clone
	p = pull
	f = fetch --tags
	fa = fetch --all --tags
	pfa = "!f() { git remote | xargs -I@ -P0 git fetch --tags \"$@\" @; }; f"
	pu = push
	puu = "!f() { [ \"$#\" -gt 1 ] && REMOTE=$1 && shift; git push \"$@\" -u \"${REMOTE:-origin}\" \"$(git rev-parse --short --abbrev-ref HEAD)\"; }; f"
	puf = push --force-with-lease
	puff = push --force

	sub = submodule
	subu = submodule update --init --recursive

	m = merge
	ma = merge --abort
	mc = merge --continue
	mff = merge --ff-only
	mnc = "!f() { git merge --no-commit --no-ff \"$@\"; EC=$?; git merge --abort; exit $EC; }; f"

	r = rebase
	ra = rebase --abort
	rc = rebase --continue
	rq = rebase --quit
	rs = rebase --skip
	ret = rebase --edit-todo
	rsh = rebase --show-current-patch

	ri = rebase --interactive
	riu = rebase --interactive @{u}
	rim = rebase --interactive master
	rid = rebase --interactive develop

	cp = cherry-pick
	cpa = cherry-pick --abort
	cpc = cherry-pick --continue
	cpq = cherry-pick --quit

	rv = revert
	rva = revert --abort
	rvc = revert --continue
	rvq = revert --quit

	re = reset
	res = reset --soft
	reh = reset --hard

	mt = mergetool
	dt = difftool

	which = branch --all --contains
	which-tag = describe --always --contains
	who = shortlog --summary --numbered --no-merges
	whoami = !"git config --get user.name && git config --get user.email"

	# list branches sorted by last modified
	bls = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's@refs/heads/@@'"

	# initialize repository in current directory
	this = "!git init && git commit --message='Initialize' --allow-empty"

	# regex checkout
	#    git rco <regex> [<options>]
	rco = "!f() { [ \"$#\" -gt 1 ] && REGEX=$1 && shift; git checkout \"$@\" \"$(git branch --all | cut -c 3- | sed 's|^remotes/.*/||' | grep -m 1 -iEe \"$REGEX\" )\"; }; f"

	# hard reset and clean (unrecoverable)
	nuke = !"git reset --hard HEAD && git clean -fd"
